name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: eu-north-1             
  ECR_REPOSITORY: referral-system-repo
  IMAGE_TAG: latest
  CONTAINER_NAME: referral-system-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            ECR_REPOSITORY="${{ env.ECR_REPOSITORY }}"
            IMAGE_TAG="${{ env.IMAGE_TAG }}"
            CONTAINER_NAME="${{ env.CONTAINER_NAME }}"
            AWS_ACCOUNT_ID=215771971945
            AWS_REGION="eu-north-1"

            echo "Logging into ECR..."
            aws ecr get-login-password --region $AWS_REGION | sudo docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

            echo "Pulling latest image from ECR..."
            sudo docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

            echo "Stopping old container (if running)..."
            sudo docker stop $CONTAINER_NAME || true
            sudo docker rm $CONTAINER_NAME || true

            echo "Running new container..."
            sudo docker run -d --name $CONTAINER_NAME \
              --restart unless-stopped \
              -e NODE_ENV=production \
              -e PORT=4001 \
              -e MONGO_URI='${{ secrets.MONGO_URI }}' \
              -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
              -p 4001:4001 \
              $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

